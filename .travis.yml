language: generic
os: linux
dist: trusty

env:
  global:
    - UNIT_TESTS=true
    - MACPORTS_CI_COMMIT=1f1bc5dfb9411ca2f4265d43c63613b7add68261  # or master

matrix:
  include:
    # GCC 6, Trusty
    - name: "Trusty - Qt 5.10"
      env: COMPILER=g++-6 GCOV=gcov-6 QT_PPA=ppa:beineri/opt-qt-5.10.1-trusty QT_PKG=qt510base QT_SRC=/opt/qt510/bin/qt510-env.sh
      addons: &gxx6 { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"], update: true } }

    - name: "Trusty - Qt 5.9"
      env: COMPILER=g++-6 GCOV=gcov-6 QT_PPA=ppa:beineri/opt-qt596-trusty QT_PKG=qt59base QT_SRC=/opt/qt59/bin/qt59-env.sh
      addons: *gxx6

    - name: "Trusty - Qt 5.6"
      env: COMPILER=g++-6 GCOV=gcov-6 QT_PPA=ppa:beineri/opt-qt563-trusty QT_PKG=qt56base QT_SRC=/opt/qt59/bin/qt56-env.sh
      addons: *gxx6

    - name: "Trusty - Qt 4.8"
      env: COMPILER=g++-6 GCOV=gcov-6 QT_PPA=ppa:beineri/opt-qt487-trusty QT_PKG=opt-libqt4-dev QT_SRC=/opt/qt-4.8/bin/qt-4.8-env.sh CXXFLAGS="-std=c++11"
      addons: *gxx6

    # OS X 10.13, xcode 9.4
    - name: "OS X 10.13 - Qt 5 latest, xcode 9.4"
      os: osx
      osx_image: xcode9.4
      env: &mp_qt5_10 QT_PKG=qt5-qtbase QT_SRC=/opt/local/libexec/qt5/bin

    - name: "OS X 10.13 - Qt 5.9 LTS, xcode 9.4"
      os: osx
      osx_image: xcode9.4
      env: &mp_qt5_9 QT_PKG=qt59-qtbase QT_SRC=/opt/local/libexec/qt5/bin

    - name: "OS X 10.13 - Qt 5.6 LTS, xcode 9.4"
      os: osx
      osx_image: xcode9.4
      env: &mp_qt5_6 QT_PKG=qt56-qtbase QT_SRC=/opt/local/libexec/qt5/bin

    - name: "OS X 10.13 - Qt 4.8, xcode 9.4"
      os: osx
      osx_image: xcode9.4
      env: &mp_qt4 QT_PKG=qt4-mac QT_SRC=/opt/local/libexec/qt4/bin CXXFLAGS="-std=c++11"

before_install:
  ####
  # Add local binaries
  - mkdir -p ~/bin
  #- export PATH=~/bin:"${PATH}"
  ####
  # Add apt repositories
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo add-apt-repository -y $QT_PPA
      sudo apt-get -q update
    fi
  ####
  # Install macports
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/${MACPORTS_CI_COMMIT}/macports-ci
      source ./macports-ci install;
    fi
  - echo "CXX=${CXX} PATH=${PATH}"

install:
  - echo "CXX=${CXX} PATH=${PATH}"
  ####
  # Install Qt
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo apt-get install -y $QT_PKG
    else
      sudo port -N install $QT_PKG
    fi

  ####
  # Select the compiler
  - |
    if [[ "${COMPILER}" != "" ]]; then
      export CXX=${COMPILER};
      ln -s $(which ${CXX}) ~/bin/g++
    fi
    if [[ "${GCOV}" != "" ]]; then
      ln -s $(which ${GCOV}) ~/bin/gcov
    fi
  - echo "CXX=${CXX} PATH=${PATH}"

before_script:
  - echo "CXX=${CXX} PATH=${PATH}"
  ####
  # Make Qt available in the path
  - if [[ -f "${QT_SRC}" || -L "${QT_SRC}" ]]; then source ${QT_SRC}; fi
  - if [[ -d "${QT_SRC}" ]]; then export PATH=${QT_SRC}:"${PATH}"; fi

  ####
  # Show settings
  - echo "CXX=${CXX} PATH=${PATH}"
  - which qmake g++ gcov
  - g++ --version

script:
  ####
  # Full build
  - |
    mkdir build
    pushd build
    qmake ..
    make all
    if [[ "${UNIT_TESTS}" == "true" ]]; then
      make -C tests debug-check release-check
    fi
    popd

  ####
  # Test coverage build
  - |
    if [[ "${UNIT_TESTS}" == "true" ]]; then
      mkdir build-cov
      pushd build-cov
      qmake .. "QMAKE_CXXFLAGS+=-coverage $CXXFLAGS" "LIBS+=-coverage"
      make all
      make -C tests release-check
      popd
    fi

after_success:
  - echo "CXX=${CXX} PATH=${PATH}"
  - ls -lR
  ####
  # Upload test coverage
  - |
    if [[ "${UNIT_TESTS}" == "true" ]]; then
      pushd build-cov/tests
      find release -name '*.gcno' -exec echo "Output file '{}'" ";" -exec gcov -pb '{}' ';' || true
      bash <(curl -s https://codecov.io/bash) -e QT_PKG -X gcov -p . -g './#*' -g './debug#*' -g './^#^#tests#*' \
      || echo "Codecov did not collect coverage reports"
      popd
    fi
