language: generic

env:
  global:
    - LNX=$([ "$TRAVIS_OS_NAME" == osx ] && echo "1" || echo "")
    - OSX=$([ "$TRAVIS_OS_NAME" == linux ] && echo "1" || echo "")
    - MACPORTS_CI_COMMIT=1f1bc5dfb9411ca2f4265d43c63613b7add68261  # or master

matrix:
  include:
    - name: "Trusty - Qt 5.10"
      dist: trusty
      env:
        - QT_PPA=ppa:beineri/opt-qt-5.10.1-trusty
        - QT_PKG=qt510base
        - QT_SRC=/opt/qt510/bin/qt510-env.sh
    - name: "Trusty - Qt 5.9"
      dist: trusty
      env:
        - QT_PPA=ppa:beineri/opt-qt596-trusty
        - QT_PKG=qt59base
        - QT_SRC=/opt/qt59/bin/qt59-env.sh
    - name: "Trusty - Qt 4.8"
      dist: trusty
      env:
        - QT_PPA=ppa:beineri/opt-qt487-trusty
        - QT_PKG=opt-libqt4-dev
        - QT_SRC=/opt/qt-4.8/bin/qt-4.8-env.sh
        - CXXFLAGS="-std=c++11"
        # Re Qt 4 dependencies - no finer-grained dependencies exist, sorry. See
        # https://launchpadlibrarian.net/207508692/buildlog_ubuntu-trusty-amd64.opt-qt4-x11_4%3A4.8.7-0opt1_BUILDING.txt.gz
    - name: "OS X - Qt 5 latest"
      os: osx
      env:
        - PATH="/opt/local/libexec/qt5/bin/:$PATH"
        - QT_PKG=qt5-qtbase
    - name: "OS X - Qt 4.8"
      os: osx
      env:
        - PATH="/opt/local/libexec/qt4/bin/:$PATH"
        - QT_PKG=qt4-mac
        - CXXFLAGS="-std=c++11"

before_install:
  # g++6
  - \[ $LNX ] || sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  # Qt
  - \[ $LNX ] || sudo add-apt-repository -y $QT_PPA
  - \[ $LNX ] || sudo apt-get -q update
  # macports
  - \[ $OSX ] || curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/${MACPORTS_CI_COMMIT}/macports-ci
  - \[ $OSX ] || source ./macports-ci install

install:
  # g++6
  - \[ $LNX ] || which gcc g++
  - \[ $LNX ] || sudo apt-get remove g++
  - \[ $LNX ] || sudo apt-get install -q g++-6
  - \[ $LNX ] || sudo apt autoremove
  # Qt
  - \[ $LNX ] || sudo apt-get install -y $QT_PKG
  - \[ $OSX ] || sudo port -N install $QT_PKG
  # Select the compiler
  - \[ $LNX ] || sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 90
  - \[ $LNX ] || sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90
  - \[ $LNX ] || sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 90

before_script:
  - \[ $QT_SRC ] && source $QT_SRC || true
  - echo PATH=$PATH
  - which qmake gcc g++ gcov
  - \[ $LNX ] || g++-6 --version
  - g++ --version

script:
  - >
    mkdir build && pushd build &&
    qmake .. && make all && make -C tests debug-check release-check && popd
  - >
    mkdir build-cov && pushd build-cov &&
    qmake .. "QMAKE_CXXFLAGS+=-coverage $CXXFLAGS" "LIBS+=-coverage" &&
    make all && make -C tests release-check && popd

after_success:
  - ls -lR
  - pushd build-cov/tests
  - find release -name '*.gcno' -exec echo "Output file '{}'" ";" -exec gcov -pb '{}' ';' || true
  - >
    pwd &&
    bash <(curl -s https://codecov.io/bash) -e QT_PKG -X gcov -p . -g './#*' -g './debug#*' -g './^#^#tests#*' ||
    echo "Codecov did not collect coverage reports"
